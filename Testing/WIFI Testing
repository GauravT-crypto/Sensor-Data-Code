#include <WiFi.h>
#include <ESPAsyncWebServer.h>

// Replace with your WIFI network credentials
const char* ssid = "your_SSID";
const char* password = "your_PASSWORD";

// Create an instance of the server on port 80
AsyncWebServer server(80);

// Define the LED pin
const int ledPin = 2;

void setup() {
  // Start the serial communication
  Serial.begin(115200);

  // Connect to Wi-Fi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("Connected to WiFi!");
  Serial.print("IP Address: ");
  Serial.println(WiFi.localIP());

  // Set LED pin as output
  pinMode(ledPin, OUTPUT);

  // Serve a web page to control the LED
  server.on("/", HTTP_GET, [](AsyncWebServerRequest *request){
    String html = "<html><body><h1>ESP32 Control</h1>";
    html += "<p><a href=\"/led/on\"><button>Turn LED ON</button></a></p>";
    html += "<p><a href=\"/led/off\"><button>Turn LED OFF</button></a></p>";
    html += "</body></html>";
    request->send(200, "text/html", html);
  });

  // Handle LED ON request
  server.on("/led/on", HTTP_GET, [](AsyncWebServerRequest *request){
    digitalWrite(ledPin, HIGH); // Turn the LED on
    request->send(200, "text/html", "LED is ON <br><a href=\"/\">Go Back</a>");
  });

  // Handle LED OFF request
  server.on("/led/off", HTTP_GET, [](AsyncWebServerRequest *request){
    digitalWrite(ledPin, LOW); // Turn the LED off
    request->send(200, "text/html", "LED is OFF <br><a href=\"/\">Go Back</a>");
  });

  // Start the server
  server.begin();
}

void loop() {
  // Nothing needed here
}
